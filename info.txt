TODO: 
Once the project has required tasks and bugs completed -> clean code -> update pkg code to be an api -> write readme

Required:
- search (this should have a map from a from search term to struct with a ref to the node and other meta data) 
  - fzf
- readme
- packagerise code 
- clean code 
  - keymaps should be function calls not inline

Nice to have: 
- smaller results panel below results that has meta data and logs?? -> there should be a toggle for this
  - test name
  - file location
  - pass / fail
  - config + location filepath 
  - logger output filepath
- a lot more options need to be read in from config
- theming
- Create/modify config in app (this should be stateless, modify yaml for persistent settings)
- add config option to set how many levels you want displayed before filename -> this shouldn't be needed once packages are added
- add results state to test in tree (tick or cross emoji??) -> this does not persist longer than the session
- add switch focus to results 
  - search 
  - scroll
  - copy 

Bug:
- go test on a file with a failing test case does not run the test?? This is the same behaviour as running go test -run filename. Look at alternative ways
- need to investigate further into what classifies as an error in go test cmds
  - the piping seems to be most noticibly broken
- some ui impovement to change screen when rerunning test
  -> seems like returning the event is what cause the execution. This means there is no easy way to change the screen while the test runs.

Notes
- Check if it might make more sence to call go test package instead of using os.exec
- check if a tparse integration works better than piping (piping can be made nicer later)
- optimize with concurrency

